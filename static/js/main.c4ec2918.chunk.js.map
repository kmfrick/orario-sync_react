{"version":3,"sources":["serviceWorker.js","SelectList.js","OrarioSyncApp.js","index.js"],"names":["Boolean","window","location","hostname","match","SelectList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSelected","bind","assertThisInitialized","newIndex","onSelect","multiple","react_default","a","createElement","dist_default","items","onChange","selected","List","beReqUrl","durations","[LMCU]","[L]","[LM]","","yearLabels","mainTitle","Fragment","schoolHeader","courseHeader","yearHeader","curriculumHeader","classesHeader","buttonContent","courseTypeRE","RegExp","OrarioSyncApp","state","schools","schoolIndex","courses","courseIndex","courseType","years","year","curricula","curriculumIndex","classes","selectedClasses","classesBtm","BitSet","fromBinaryString","listBgColor","listTextColor","listSelColor","_this2","fetch","then","response","json","data","setState","prevProps","prevState","_this3","document","body","style","borderColor","toConsumableArray","Array","keys","forEach","i","push","counts","length","num","newClasses","item","newBtm","flip","_this4","listStyle","backgroundColor","color","schoolNames","name","courseNames","curriculumNames","classNames","src_SelectList","exec","type","onClick","e","open","toString","React","Component","osa","src_OrarioSyncApp","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4ec2918.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import List from \"react-list-select\";\nimport React from \"react\";\n\nclass SelectList extends List {\n\n    constructor(props) {\n        super(props);\n        this.updateSelected = this.updateSelected.bind(this);\n    }\n\n    updateSelected(newIndex) {\n        this.props.onSelect(newIndex);\n    }\n\n    render() {\n        if (this.props.multiple) {\n            return <List\n                multiple={true}\n                items={this.props.items}\n                onChange={this.updateSelected}\n                selected={this.props.selected}\n            />\n        } else {\n            return <List\n                multiple={false}\n                items={this.props.items}\n                onChange={this.updateSelected}\n                selected={[this.props.selected]}\n            />;\n        }\n\n    }\n}\n\nexport default SelectList;","//TODO: autoscroll\n\nimport React from \"react\";\nimport SelectList from \"./SelectList\";\nimport BitSet from \"bitset\"\n\nconst beReqUrl = \"https://orario-syncunibo-nhto0mc7f.now.sh\";\nconst beParamSchool = \"?school=\";\nconst beParamCourse = \"&course=\";\nconst beParamYear = \"&year=\";\nconst beParamCurr = \"&curr=\";\nconst beParamClsBtm = \"&classes=\";\nconst beGetSchools = \"/getschools.py\";\nconst beGetCourses = \"/getcourses.py\";\nconst beGetCurricula = \"/getcurricula.py\";\nconst beGetClasses = \"/getclasses.py\";\nconst beGetCalendar = \"/getical.py\";\n\nconst durations = {\"[LMCU]\": 6, \"[L]\": 3, \"[LM]\": 2, \"\": 0};\nconst yearLabels = [\"Primo\", \"Secondo\", \"Terzo\", \"Quarto\", \"Quinto\", \"Sesto\"];\n\nconst mainTitle = <>OrarioSync</>;\nconst schoolHeader = <>Seleziona la tua Scuola</>;\nconst courseHeader = <>Seleziona il tuo corso di studi</>;\nconst yearHeader = <>Seleziona l'anno a cui sei iscritto</>;\nconst curriculumHeader = <>Seleziona il tuo curriculum</>;\nconst classesHeader = <>Seleziona i corsi che segui</>;\nconst buttonContent = <>Scarica orario in iCal</>;\n\n\nconst courseTypeRE = new RegExp(\"\\\\[(.*?)]\");\n\nclass OrarioSyncApp extends React.Component {\n    state = {\n        schools: [],\n        schoolIndex: -1,\n        courses: [],\n        courseIndex: -1,\n        courseType: \"\",\n        years: [],\n        year: -1,\n        curricula: [],\n        curriculumIndex: -1,\n        classes: [],\n        selectedClasses: [],\n        classesBtm: BitSet.fromBinaryString(\"0\"),\n        listBgColor: \"#fafafa\",\n        listTextColor: \"#000000\",\n        listSelColor: \"#d7e7ff\"\n    };\n\n    componentDidMount() {\n        fetch(beReqUrl + beGetSchools)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({schools: data});\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const colors = [\"#AA005F\", \"#EFAA00\", \"#FF7D18\", \"#0066A3\", \"#00857E\", \"#FFFFFF\", \"#00539F\",\n            \"#CE1126\", \"#8B2346\", \"#008633\", \"#3E2782\"];\n        const schoolIndex = this.state.schoolIndex;\n        const courseIndex = this.state.courseIndex;\n        const courseType = this.state.courseType;\n        const curriculumIndex = this.state.curriculumIndex;\n        const selectedClasses = this.state.selectedClasses;\n        const year = this.state.year;\n        if (prevState.schoolIndex !== schoolIndex) {\n            fetch(beReqUrl + beGetCourses + beParamSchool + schoolIndex)\n                .then(response => response.json())\n                .then(data => this.setState({courses: data}));\n            this.setState({\n                courseIndex: -1,\n                courseType: \"\",\n                year: -1,\n                curricula: [],\n                curriculumIndex: -1\n            });\n            document.body.style.borderColor = colors[schoolIndex];\n\n        }\n        if (prevState.courseType !== courseType) {\n            let items = [];\n            let yearNumbers = [...Array(durations[this.state.courseType]).keys()];\n            yearNumbers.forEach(i => items.push(yearLabels[i]));\n            this.setState({years: items});\n        }\n        if ((prevState.courseIndex !== courseIndex && year > 0) || prevState.year !== year) {\n            fetch(beReqUrl + beGetCurricula + beParamSchool + schoolIndex + beParamCourse + courseIndex + beParamYear + year)\n                .then(response => response.json())\n                .then(data => this.setState({curricula: data}));\n            this.setState({\n                curricula: [],\n                curriculumIndex: -1\n            });\n        }\n        if (prevState.curriculumIndex !== curriculumIndex) {\n            fetch(beReqUrl + beGetClasses + beParamSchool + schoolIndex + beParamCourse + courseIndex + beParamYear + year + beParamCurr + curriculumIndex)\n                .then(response => response.json())\n                .then(data => this.setState({classes: data}));\n            this.setState({\n                classes: [],\n                selectedClasses: [],\n                classesBtm: BitSet.fromBinaryString(\"0\")\n            });\n        }\n        if (prevState.selectedClasses !== selectedClasses) {\n            let counts = {};\n\n            for (let i = 0; i < selectedClasses.length; i++) {\n                let num = selectedClasses[i];\n                counts[num] = counts[num] ? counts[num] + 1 : 1;\n            }\n            let newClasses = [];\n            selectedClasses.forEach(item => {\n                if ((counts[item] % 2) !== 0) newClasses.push(item);\n            });\n            let newBtm = BitSet.fromBinaryString(\"0\");\n            newClasses.forEach(item => newBtm.flip(item));\n            this.setState({classesBtm: newBtm});\n        }\n    }\n\n\n    render() {\n        const {schools} = this.state;\n        const {schoolIndex} = this.state;\n        const {courses} = this.state;\n        const {courseType} = this.state;\n        const {courseIndex} = this.state;\n        const {year} = this.state;\n        const {curricula} = this.state;\n        const {curriculumIndex} = this.state;\n        const {classes} = this.state;\n        const {selectedClasses} = this.state;\n        const {classesBtm} = this.state;\n        const listStyle = {\n            backgroundColor: this.state.listBgColor,\n            color: this.state.listTextColor,\n        };\n\n        if (!schools.length) return <span>Getting schools...</span>;\n        let schoolNames = [];\n        schools.forEach(item => schoolNames.push(item.name));\n\n        if (!courses.length && schoolIndex >= 0) return <span>Getting courses...</span>;\n        let courseNames = [];\n        courses.forEach(item => courseNames.push(item.name));\n\n        if (!curricula.length && year >= 0) return <span>Getting curricula...</span>;\n        let curriculumNames = [];\n        curricula.forEach(item => curriculumNames.push(item.name));\n\n        if (!classes.length && curriculumIndex >= 0) return <span>Getting classes...</span>;\n        let classNames = [];\n        classes.forEach(item => classNames.push(item.name));\n\n\n        return (\n            <>\n                <h1>{mainTitle}</h1>\n                <h2>{schoolHeader}</h2>\n                <SelectList\n                    items={schoolNames}\n                    onSelect={selected =>\n                        this.setState({schoolIndex: selected})\n                    }\n                    selected={schoolIndex}\n                    multiple={false}\n                    style={listStyle}\n                />\n                {courses.length &&\n                <>\n                    <h2>{courseHeader}</h2>\n                    <SelectList\n                        items={courseNames}\n                        onSelect={selected => {\n                            this.setState({courseIndex: selected});\n                            this.setState({courseType: courseTypeRE.exec(courseNames[selected])[0]});\n                        }}\n                        selected={courseIndex}\n                        multiple={false}\n                    />\n                </>}\n                {courseType.length &&\n                <>\n                    <h2>{yearHeader}</h2>\n                    <SelectList\n                        items={this.state.years}\n                        onSelect={selected =>\n                            this.setState({year: selected + 1})\n                        }\n                        selected={year - 1}\n                        multiple={false}\n                    />\n\n                </>}\n                {year >= 0 &&\n                <>\n                    <h2>{curriculumHeader}</h2>\n                    <SelectList\n                        items={curriculumNames}\n                        onSelect={selected =>\n                            this.setState({curriculumIndex: selected})\n                        }\n                        selected={curriculumIndex}\n                        multiple={false}\n                    />\n                </>}\n                {curriculumIndex >= 0 &&\n                <>\n                    <h2>{classesHeader}</h2>\n                    <SelectList\n                        items={classes}\n                        multiple={true}\n                        onSelect={selected => {\n                            this.setState({selectedClasses: selected});\n                        }}\n                        selected={selectedClasses}\n                    />\n                </>\n                }\n                {classesBtm > 0 &&\n                <div>\n                    <button\n                        type=\"button\"\n                        onClick={e => window.open(beReqUrl + beGetCalendar + beParamSchool + schoolIndex + beParamCourse + courseIndex + beParamYear + year + beParamCurr + curriculumIndex + beParamClsBtm + classesBtm.toString(10))}>\n                        {buttonContent}\n                    </button>\n                </div>}\n            </>\n        )\n    }\n}\n\nexport default OrarioSyncApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from \"./serviceWorker\";\nimport OrarioSyncApp from \"./OrarioSyncApp\"\n\nlet osa = <OrarioSyncApp/>;\n\nReactDOM.render(osa, document.getElementById(\"container\"));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}